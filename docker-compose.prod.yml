services:
  traefik:
    image: traefik:v2.10
    env_file:
      - ./salonease-mvp/backend/.env
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=admin@zenmanager.eu"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22"
      - "--entrypoints.websecure.proxyProtocol.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22"
      - "--log.level=ERROR"
      - "--accesslog=true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    image: ghcr.io/man0l/salonease:frontend-latest
    env_file:
      - ./salonease-mvp/frontend/.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`zenmanager.eu`) && !PathPrefix(`/api`) && !PathPrefix(`/uploads`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - app-network
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    image: ghcr.io/man0l/salonease:backend-latest
    env_file:
      - ./salonease-mvp/backend/.env
    environment:
      - NODE_ENV=production
      - FRONTEND_URL=https://zenmanager.eu
      - CORS_ORIGIN=https://zenmanager.eu
      - PORT=5000
    labels:
      - "traefik.enable=true"
      # Main API router
      - "traefik.http.routers.backend.rule=Host(`zenmanager.eu`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
      
      # Static files router for uploads
      - "traefik.http.routers.backend-uploads.rule=Host(`zenmanager.eu`) && PathPrefix(`/uploads`)"
      - "traefik.http.routers.backend-uploads.entrypoints=websecure"
      - "traefik.http.routers.backend-uploads.tls.certresolver=myresolver"
      - "traefik.http.routers.backend-uploads.service=backend-service"
      
      - "traefik.http.services.backend.loadbalancer.server.port=5000"
      - "traefik.http.middlewares.strip-api.stripprefix.prefixes=/api"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE,OPTIONS"
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=https://zenmanager.eu"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.cors.headers.addvaryheader=true"
      - "traefik.http.services.backend-service.loadbalancer.server.port=5000"
      - "traefik.http.services.backend-service.loadbalancer.passHostHeader=true"
      - "traefik.http.routers.backend.service=backend-service"
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./salonease-mvp/backend/uploads:/app/uploads

  db:
    image: postgres:13-alpine
    env_file:
      - ./salonease-mvp/backend/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - ./salonease-mvp/backend/.env
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - pgadmin_logs:/var/log/pgadmin
      - ./pgadmin/config_distro.py:/pgadmin4/config_distro.py
    environment:
      - PGADMIN_LISTEN_PORT=80
      - PGADMIN_CONFIG_SERVER_MODE=True
      - PGADMIN_CONFIG_DEFAULT_SERVER=0.0.0.0
    labels:
      - "traefik.enable=true"
      
      # Simplified router configuration
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.zenmanager.eu`)"
      - "traefik.http.routers.pgadmin.entrypoints=websecure"
      - "traefik.http.routers.pgadmin.tls.certresolver=myresolver"
      
      # Service configuration
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
      
      # Basic security headers
      - "traefik.http.middlewares.pgadmin-headers.headers.sslredirect=true"
      - "traefik.http.middlewares.pgadmin-headers.headers.stsSeconds=315360000"
      - "traefik.http.middlewares.pgadmin-headers.headers.forceSTSHeader=true"
      
      # Apply the middleware to the router
      - "traefik.http.routers.pgadmin.middlewares=pgadmin-headers"

    networks:
      - app-network
    depends_on:
      - db
    restart: unless-stopped
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_LABEL_ENABLE=true
    command: --interval 300 --label-enable
    networks:
      - app-network
    restart: unless-stopped
  n8n:
    image: n8nio/n8n:latest
    env_file:
      - ./salonease-mvp/backend/.env
    environment:
      - DB_TYPE=postgresdb
      - N8N_HOST=n8n.zenmanager.eu
      - N8N_PROTOCOL=https
      - N8N_PORT=5678
      - WEBHOOK_URL=https://n8n.zenmanager.eu/
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`n8n.zenmanager.eu`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.tls.certresolver=myresolver"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - n8n_data:/home/node/.n8n
    restart: unless-stopped


networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
  pgadmin_logs: 
  n8n_data:
