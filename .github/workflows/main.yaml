name: CI/CD

on:
  push:
    branches:
      - 'master'

permissions:
  packages: write

jobs:
  build-and-push-backend:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
          
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./salonease-mvp/backend
          file: ./salonease-mvp/backend/Dockerfile.prod
          push: true
          tags: ghcr.io/man0l/salonease:backend-latest,ghcr.io/man0l/salonease:backend-${{ env.COMMIT_SHORT_SHA }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-and-push-frontend:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Check required secrets
        run: |
          if [ -z "${{ secrets.REACT_APP_MAILERLITE_API_KEY }}" ]; then
            echo "Error: REACT_APP_MAILERLITE_API_KEY is not set"
            exit 1
          fi
          if [ -z "${{ secrets.REACT_APP_STRIPE_PUBLISHABLE_KEY }}" ]; then
            echo "Error: REACT_APP_STRIPE_PUBLISHABLE_KEY is not set"
            exit 1
          fi
          
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
          
      - name: Create environment file
        run: |
          echo "REACT_APP_MAILERLITE_API_KEY=${{ secrets.REACT_APP_MAILERLITE_API_KEY }}" > ./salonease-mvp/frontend/.env.production
          echo "REACT_APP_STRIPE_PUBLISHABLE_KEY=${{ secrets.REACT_APP_STRIPE_PUBLISHABLE_KEY }}" >> ./salonease-mvp/frontend/.env.production
          echo "REACT_APP_API_URL=https://zenmanager.eu/api" >> ./salonease-mvp/frontend/.env.production
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
          
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./salonease-mvp/frontend
          file: ./salonease-mvp/frontend/Dockerfile.prod
          push: true
          tags: ghcr.io/man0l/salonease:frontend-latest,ghcr.io/man0l/salonease:frontend-${{ env.COMMIT_SHORT_SHA }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
